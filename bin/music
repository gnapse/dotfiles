#!/usr/bin/env ruby

class App
  def initialize
    @options = ARGV.shift if ARGV.first =~ /\A-[a-z]+\z/
    @options = ARGV.pop if ARGV.last =~ /\A-[a-z]+\z/
    @command = ARGV.first
    @query = ARGV.map { |arg| "\"#{arg}\"" }.join(" ")
  end

  def run
    case @command
    when "list"
      exec "mpc playlist #{FORMAT} | #{ALIGN} | #{LESS}"
    when "info" then cmd "mpc status", true
    when "player" then exec "pms -c #{ENV['DOTFILES']}/pmsrc"
    when "lyrics" then lyrics
    when "help" then help
    when "shuffle"
      cmd "mpc random off"
      cmd "mpc shuffle", true
    when VERBATIM_COMMANDS
      cmd "mpc #{@query}", true
    when SEARCH_COMMANDS
      search
    else
      puts "Invalid command #{@command}"
      exit(1)
    end
  end

  private

  VERBATIM_COMMANDS = /\A(play|stop|pause|prev|next|clear|status|toggle|update|crop|current|del|move|random|volume)\z/
  SEARCH_COMMANDS = /\A(album|any|artist|comment|composer|date|disc|filename|genre|name|performer|title|track)\z/
  FORMAT = '--format="%position% ~ %title% ~ %time% ~ %artist% ~ %album%"'
  LESS = 'less -ci~'
  ALIGN = 'align -s "~" -j "  " -a RLRLL'

  def cmd(line, print_output = false)
    if print_output
      system line
    else
      `#{line}`
    end
  end

  def search
    if option?(:l)
      cmd "mpc search #{@query}", true
    else
      cmd "mpc clear" unless option?(:a)
      cmd "mpc search #{@query} | mpc add"
      cmd "mpc random on" if option?(:r)
      if option?(:s)
        cmd "mpc random off"
        cmd "mpc shuffle"
      end
      cmd "mpc play", true
    end
  end

  def lyrics
    require 'taglib'
    file = "#{ENV['HOME']}/.music/#{`mpc current --format=%file%`}".strip
    TagLib::MPEG::File.open(file) do |file|
      tag = file.id3v2_tag
      lyrics = tag.frame_list("USLT").first || "(No lyrics)"
      title = `mpc current --format="%title% - %artist%"`
      less "#{title}\n\n#{lyrics}"
    end
  end

  def help
    less <<-eos
    Advanced CLI interface to MPD.

    Usage:
      music <command> [arguments]
      music [options] <search-criteria> <value> [<search-criteria> <value]+

    Valid commands:
      list               - displays the list of songs currently playing
      lyrics             - displays the lyrics of the current song
      player             - loads an interactive music player interface
      current            - displays basic information about the current song
      info               - displays more detailed information about the current song
      prev               - go back and play the previous song in the list
      next               - go forward and play the next song in the list
      play               - start playing the current playlist
      stop               - stop playing music
      toggle             - toggle playing music
      crop               - remove all songs from playlist except the one that is currently playing
      del [number]       - remove the specified song from the playlist, or the current song if none given
      move <from> <to>   - moves the song at position to another position in the playlist
      shuffle            - shuffle the list of songs currently playing
      random [on|off]    - play songs in the current playlist in random order
      volume [+/-n]      - displays or changes the volume
      <search-criteria>  - see below

    Search:
      Allows to find any desired music and quickly start listening to it.
      Note: By default, the results of a search will replace the current playlist.

    Valid option flags:
      -a adds to playlist, instead of replacing.
      -l only list the search results, without modifying the playlist.
      -r turns random on after adding results to playlist.
      -s shuffle playlist after adding. Overrides the -r option.

    Examples:
      $ music album puppet                            # load all songs from albums with names mathing "puppet"
      $ music title "Enter sandman" artist Metallica  # load all songs by Metallica with the given name
      $ music date 1991 genre metal                   # load all metal songs from 1991

    Valid search criteria:
      album, any, artist, comment, composer, date, disc, filename, genre, name, performer, title, track
    eos
  end

  def less(str)
    IO.popen(LESS, "w") { |f| f.puts str }
  end

  def option?(opt)
    @options.include?(opt.to_s)
  rescue
    false
  end
end

App.new.run
