#!/bin/sh

APP_NAME=$(echo $1 | tr '[:upper:]' '[:lower:]')
APP_NAME_UPCASE=$(echo $1 | tr '[:lower:]' '[:upper:]')
APP_NAME_CAPITALIZED=$(echo $APP_NAME | ruby -e 'puts gets.capitalize')

rails new $APP_NAME --database postgresql -T --skip-bundle
cd $APP_NAME

#
# Gemfile
#

# Add dotenv-rails gem
sed "/pg/a\\
gem 'dotenv-rails'
" Gemfile > Gemfile.tmp
mv Gemfile.tmp Gemfile

# Add haml-rails gem
sed "/sass-rails/i\\
gem 'haml-rails'
" Gemfile > Gemfile.tmp
mv Gemfile.tmp Gemfile

# Cleanup Gemfile
sed 's/^#.*//' Gemfile | sed '/^$/d' | sed '/dotenv/G' | sed '/rubygems/G' > Gemfile.tmp
mv Gemfile.tmp Gemfile

# More Gemfile cleanup
sed -n '/group/q;p' Gemfile | sed '/jbuilder/d' > Gemfile.tmp
mv Gemfile.tmp Gemfile

# Append some stuff to Gemfile
cat <<EOS >>Gemfile

group :development, :test do
  gem 'rspec-rails'
  gem 'factory_girl_rails'
  gem 'capybara'
  gem 'jazz_hands'
end

group :development do
  gem 'guard-rspec', require: false
  gem 'rb-fsevent' if \`uname\` =~ /Darwin/
end
EOS

#
# specs setup
#

bundle install
rails g rspec:install

# Add capybara to spec_helper
sed "/autorun/a\\
require 'capybara/rspec'
" spec/spec_helper.rb > spec_helper
mv spec_helper spec/spec_helper.rb

cat <<EOS >Guardfile
guard :rspec do
  watch(%r{^spec/.+_spec\.rb$})
  watch(%r{^lib/(.+)\.rb$})     { |m| "spec/lib/#{m[1]}_spec.rb" }
  watch('spec/spec_helper.rb')  { "spec" }

  # Rails app
  watch(%r{^app/(.+)\.rb$})                           { |m| "spec/#{m[1]}_spec.rb" }
  watch(%r{^app/(.*)(\.erb|\.haml|\.slim)$})          { |m| "spec/#{m[1]}#{m[2]}_spec.rb" }
  watch(%r{^app/controllers/(.+)_(controller)\.rb$})  { |m| ["spec/routing/#{m[1]}_routing_spec.rb", "spec/#{m[2]}s/#{m[1]}_#{m[2]}_spec.rb", "spec/acceptance/#{m[1]}_spec.rb"] }
  watch(%r{^spec/support/(.+)\.rb$})                  { "spec" }
  watch('config/routes.rb')                           { "spec/routing" }
  watch('app/controllers/application_controller.rb')  { "spec/controllers" }

  # Capybara features specs
  watch(%r{^app/views/(.+)/.*\.(erb|haml|slim)$})     { |m| "spec/features/#{m[1]}_spec.rb" }

  # Turnip features and steps
  watch(%r{^spec/acceptance/(.+)\.feature$})
  watch(%r{^spec/acceptance/steps/(.+)_steps\.rb$})   { |m| Dir[File.join("**/#{m[1]}.feature")][0] || 'spec/acceptance' }
end
EOS

#
# haml layout
#

rm app/views/layouts/application.html.*
cat <<EOS > app/views/layouts/application.html.haml
!!!
%html
  %head
    %title $APP_NAME_CAPITALIZED
    = stylesheet_link_tag    "application", media: "all", "data-turbolinks-track" => true
    = javascript_include_tag "application", "data-turbolinks-track" => true
    = csrf_meta_tags
  %body
    = yield
EOS

#
# gitignore and .env files
#

cat <<EOS >>.gitignore

# Environment variables
.env
.env.*
!.env.test
EOS

cat <<EOS >.env
${APP_NAME_UPCASE}_DATABASE_NAME=${APP_NAME}_dev
${APP_NAME_UPCASE}_DATABASE_HOST=localhost
${APP_NAME_UPCASE}_DATABASE_USERNAME=$USER
${APP_NAME_UPCASE}_DATABASE_PASSWORD=
EOS

cat <<EOS >.env.test
${APP_NAME_UPCASE}_DATABASE_NAME=${APP_NAME}_test
${APP_NAME_UPCASE}_DATABASE_HOST=localhost
${APP_NAME_UPCASE}_DATABASE_USERNAME=$USER
${APP_NAME_UPCASE}_DATABASE_PASSWORD=
EOS

#
# database setup
#

cat <<EOS >config/database.yml
defaults: &defaults
  adapter: postgresql
  encoding: unicode
  pool: 5
  host: <%= ENV['${APP_NAME_UPCASE}_DATABASE_HOST'] %>
  database: <%= ENV['${APP_NAME_UPCASE}_DATABASE_NAME'] %>
  username: <%= ENV['${APP_NAME_UPCASE}_DATABASE_USERNAME'] %>
  password: <%= ENV['${APP_NAME_UPCASE}_DATABASE_PASSWORD'] %>

development: *defaults
production: *defaults
test: *defaults
EOS

createdb ${APP_NAME}_dev
createdb ${APP_NAME}_test
bundle exec rake db:migrate
bundle exec rake db:migrate RAILS_ENV=test

#
# git repo
#

git init
git add -A
git commit -m "Initial commit"
mv .git/hooks/pre-commit.sample .git/hooks/pre-commit

if command -v git-flow; then
    git flow init -d
fi
